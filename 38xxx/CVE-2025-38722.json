{
  "cveMetadata": {
    "cveId": "CVE-2025-38722",
    "assignerOrgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
    "state": "PUBLISHED",
    "assignerShortName": "Linux",
    "dateReserved": "2025-04-16T04:51:24.033Z",
    "datePublished": "2025-09-04T15:33:15.641Z",
    "dateUpdated": "2025-09-29T05:56:47.269Z"
  },
  "containers": {
    "cna": {
      "providerMetadata": {
        "orgId": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "shortName": "Linux",
        "dateUpdated": "2025-09-29T05:56:47.269Z"
      },
      "descriptions": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nhabanalabs: fix UAF in export_dmabuf()\n\nAs soon as we'd inserted a file reference into descriptor table, another\nthread could close it.  That's fine for the case when all we are doing is\nreturning that descriptor to userland (it's a race, but it's a userland\nrace and there's nothing the kernel can do about it).  However, if we\nfollow fd_install() with any kind of access to objects that would be\ndestroyed on close (be it the struct file itself or anything destroyed\nby its ->release()), we have a UAF.\n\ndma_buf_fd() is a combination of reserving a descriptor and fd_install().\nhabanalabs export_dmabuf() calls it and then proceeds to access the\nobjects destroyed on close.  In particular, it grabs an extra reference to\nanother struct file that will be dropped as part of ->release() for ours;\nthat \"will be\" is actually \"might have already been\".\n\nFix that by reserving descriptor before anything else and do fd_install()\nonly when everything had been set up.  As a side benefit, we no longer\nhave the failure exit with file already created, but reference to\nunderlying file (as well as ->dmabuf_export_cnt, etc.) not grabbed yet;\nunlike dma_buf_fd(), fd_install() can't fail."
        }
      ],
      "affected": [
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "unaffected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/accel/habanalabs/common/memory.c"
          ],
          "versions": [
            {
              "version": "db1a8dd916aac986871f6b873a3aefad906f383a",
              "lessThan": "c07886761fd6251db6938d4e747002e3d150d231",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "db1a8dd916aac986871f6b873a3aefad906f383a",
              "lessThan": "40deceb38f9db759772d1c289c28fd2a543f57fc",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "db1a8dd916aac986871f6b873a3aefad906f383a",
              "lessThan": "55c232d7e0241f1d5120b595e7a9de24c75ed3d8",
              "status": "affected",
              "versionType": "git"
            },
            {
              "version": "db1a8dd916aac986871f6b873a3aefad906f383a",
              "lessThan": "33927f3d0ecdcff06326d6e4edb6166aed42811c",
              "status": "affected",
              "versionType": "git"
            }
          ]
        },
        {
          "product": "Linux",
          "vendor": "Linux",
          "defaultStatus": "affected",
          "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
          "programFiles": [
            "drivers/accel/habanalabs/common/memory.c"
          ],
          "versions": [
            {
              "version": "5.16",
              "status": "affected"
            },
            {
              "version": "0",
              "lessThan": "5.16",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.12.43",
              "lessThanOrEqual": "6.12.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.15.11",
              "lessThanOrEqual": "6.15.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.16.2",
              "lessThanOrEqual": "6.16.*",
              "status": "unaffected",
              "versionType": "semver"
            },
            {
              "version": "6.17",
              "lessThanOrEqual": "*",
              "status": "unaffected",
              "versionType": "original_commit_for_fix"
            }
          ]
        }
      ],
      "cpeApplicability": [
        {
          "nodes": [
            {
              "operator": "OR",
              "negate": false,
              "cpeMatch": [
                {
                  "vulnerable": true,
                  "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                  "versionStartIncluding": "5.16",
                  "versionEndExcluding": "6.12.43"
                },
                {
                  "vulnerable": true,
                  "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                  "versionStartIncluding": "5.16",
                  "versionEndExcluding": "6.15.11"
                },
                {
                  "vulnerable": true,
                  "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                  "versionStartIncluding": "5.16",
                  "versionEndExcluding": "6.16.2"
                },
                {
                  "vulnerable": true,
                  "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                  "versionStartIncluding": "5.16",
                  "versionEndExcluding": "6.17"
                }
              ]
            }
          ]
        }
      ],
      "references": [
        {
          "url": "https://git.kernel.org/stable/c/c07886761fd6251db6938d4e747002e3d150d231"
        },
        {
          "url": "https://git.kernel.org/stable/c/40deceb38f9db759772d1c289c28fd2a543f57fc"
        },
        {
          "url": "https://git.kernel.org/stable/c/55c232d7e0241f1d5120b595e7a9de24c75ed3d8"
        },
        {
          "url": "https://git.kernel.org/stable/c/33927f3d0ecdcff06326d6e4edb6166aed42811c"
        }
      ],
      "title": "habanalabs: fix UAF in export_dmabuf()"
    }
  },
  "search": "解析验收测试文案"
}